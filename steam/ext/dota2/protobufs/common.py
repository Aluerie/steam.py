# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_gcmessages_common.proto
# plugin: python-betterproto

from __future__ import annotations

from dataclasses import dataclass

import betterproto

from ....protobufs.msg import GCProtobufMessage
from ..enums import EMsg


# fmt: off
class ProfileCardEStatID(betterproto.Enum):
    Wins               = 3
    Commends           = 4
    GamesPlayed        = 5
    FirstMatchDate     = 6
    PreviousSeasonRank = 7
    GamesMVP           = 8
# fmt: on


@dataclass(eq=False, repr=False)
class BattleCupVictory(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    win_date: int = betterproto.uint32_field(2)
    valid_until: int = betterproto.uint32_field(3)
    skill_level: int = betterproto.uint32_field(4)
    tournament_id: int = betterproto.uint32_field(5)
    division_id: int = betterproto.uint32_field(6)
    team_id: int = betterproto.uint32_field(7)
    streak: int = betterproto.uint32_field(8)
    trophy_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ProfileCardSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    trophy: ProfileCardSlotTrophy = betterproto.message_field(2)
    stat: ProfileCardSlotStat = betterproto.message_field(3)
    item: ProfileCardSlotItem = betterproto.message_field(4)
    hero: ProfileCardSlotHero = betterproto.message_field(5)
    emoticon: ProfileCardSlotEmoticon = betterproto.message_field(6)
    team: ProfileCardSlotTeam = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ProfileCardSlotTrophy(betterproto.Message):
    trophy_id: int = betterproto.uint32_field(1)
    trophy_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ProfileCardSlotStat(betterproto.Message):
    stat_id: ProfileCardEStatID = betterproto.enum_field(1)
    stat_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ProfileCardSlotItem(betterproto.Message):
    serialized_item: bytes = betterproto.bytes_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ProfileCardSlotHero(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    hero_wins: int = betterproto.uint32_field(2)
    hero_losses: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ProfileCardSlotEmoticon(betterproto.Message):
    emoticon_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ProfileCardSlotTeam(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)


class ProfileCard(GCProtobufMessage, msg=EMsg.ClientToGCGetProfileCardResponse):
    account_id: int = betterproto.uint32_field(1)
    slots: list[ProfileCardSlot] = betterproto.message_field(3)
    badge_points: int = betterproto.uint32_field(4)
    event_points: int = betterproto.uint32_field(5)
    event_id: int = betterproto.uint32_field(6)
    recent_battle_cup_victory: BattleCupVictory = betterproto.message_field(7)
    rank_tier: int = betterproto.uint32_field(8)
    leaderboard_rank: int = betterproto.uint32_field(9)
    is_plus_subscriber: bool = betterproto.bool_field(10)
    plus_original_start_date: int = betterproto.uint32_field(11)
    rank_tier_score: int = betterproto.uint32_field(12)
    leaderboard_rank_core: int = betterproto.uint32_field(17)
    title: int = betterproto.uint32_field(23)
    favorite_team_packed: int = betterproto.uint64_field(24)
    lifetime_games: int = betterproto.uint32_field(25)
