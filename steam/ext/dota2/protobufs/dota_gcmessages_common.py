# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_gcmessages_common.proto
# plugin: python-betterproto
from __future__ import annotations

from dataclasses import dataclass
from typing import TYPE_CHECKING

import betterproto

if TYPE_CHECKING:
    from .dota_shared_enums import (
        CMsgPendingEventAward,
        DOTAGameMode,
        DOTAGCTeam,
        EEvent,
        ELeaguePhase,
        ELeagueRegion,
        EMatchOutcome,
    )


class ESpecialPingValue(betterproto.Enum):
    NoData = 16382
    Failed = 16383


class EDOTAGCSessionNeed(betterproto.Enum):
    Unknown = 0
    UserNoSessionNeeded = 100
    UserInOnlineGame = 101
    UserInLocalGame = 102
    UserInUIWasConnected = 103
    UserInUINeverConnected = 104
    UserTutorials = 105
    UserInUIWasConnectedIdle = 106
    UserInUINeverConnectedIdle = 107
    GameServerOnline = 200
    GameServerLocal = 201
    GameServerIdle = 202
    GameServerRelay = 203
    GameServerLocalUpload = 204


class EDOTAMatchPlayerTimeCustomStat(betterproto.Enum):
    HPRegenUnderT1Towers = 1
    MagicDamageReducedWithNewFormula_Absolute = 2
    MagicDamageReducedWithNewFormula_PercentOfTotalHP = 3


class DOTATournamentEvents(betterproto.Enum):
    FIRST_BLOOD = 0
    GAME_END = 1
    MULTI_KILL = 2
    HERO_DENY = 3
    AEGIS_DENY = 4
    AEGIS_STOLEN = 5
    GODLIKE = 6
    COURIER_KILL = 7
    ECHOSLAM = 8
    RAPIER = 9
    EARLY_ROSHAN = 10
    BLACK_HOLE = 11


class EBroadcastTimelineEvent(betterproto.Enum):
    MatchStarted = 1
    GameStateChanged = 2
    TowerDeath = 3
    BarracksDeath = 4
    AncientDeath = 5
    RoshanDeath = 6
    HeroDeath = 7
    TeamFight = 8
    FirstBlood = 9


class ECustomGameWhitelistState(betterproto.Enum):
    UNKNOWN = 0
    APPROVED = 1
    REJECTED = 2


class EDOTATriviaQuestionCategory(betterproto.Enum):
    AbilityIcon = 0
    AbilityCooldown = 1
    HeroAttributes = 2
    HeroMovementSpeed = 3
    TalentTree = 4
    HeroStats = 5
    ItemPrice = 6
    AbilitySound = 7
    InvokerSpells = 8
    AbilityManaCost = 9
    HeroAttackSound = 10
    AbilityName = 11
    ItemComponents = 12
    ItemLore = 13
    ItemPassives = 14
    STATIC_QUESTIONS_END = 15
    DYNAMIC_QUESTIONS_START = 99
    Dynamic_ItemBuild = 100


class EOverwatchConviction(betterproto.Enum):
    NONE = 0
    NotGuilty = 1
    GuiltUnclear = 2
    Guilty = 3


class EHeroRelicRarity(betterproto.Enum):
    INVALID = -1
    COMMON = 0
    RARE = 1


class EStickerbookAuditAction(betterproto.Enum):
    CREATE_PAGE = 0
    DELETE_PAGE = 1
    STICK_STICKERS = 2
    REPLACE_STICKERS = 3
    HERO_STICKER = 4


class EStickerbookPageType(betterproto.Enum):
    GENERIC = 0
    TEAM = 1
    TALENT = 2


class CMsgDOTAProfileCardEStatID(betterproto.Enum):
    Wins = 3
    Commends = 4
    GamesPlayed = 5
    FirstMatchDate = 6
    PreviousSeasonRank = 7
    GamesMVP = 8


class CMsgGCRerollPlayerChallengeResponseEResult(betterproto.Enum):
    Success = 0
    Dropped = 1
    NotFound = 2
    CantReroll = 3
    ServerError = 4


class CMsgDOTARealtimeGameStatsGraphDataeStat(betterproto.Enum):
    CreepGoldEarned = 0
    KillGoldEarned = 1
    DeathAndBuybackGoldLost = 2
    XPEarned = 3


class CMsgDOTARealtimeGameStatsGraphDataeLocation(betterproto.Enum):
    BotLane = 0
    MidLane = 1
    TopLane = 2
    Jungle = 3
    Ancients = 4
    Other = 5


class CMsgInGamePredictionERawValueTypeT(betterproto.Enum):
    Number = 0
    Time = 1


class CMsgInGamePredictionEPredictionType(betterproto.Enum):
    Generic = 0
    Hero = 1
    Team = 2
    Player = 3
    Special = 4
    YesNo = 5
    QualifiersTeam = 6


class CMsgInGamePredictionEResolutionTypeT(betterproto.Enum):
    InvalidQuery = 0
    FirstToPassQuery = 1
    LastToPassQuery = 2
    LastRemainingQuery = 3
    MaxToPassQuery = 4
    MinToPassQuery = 5
    SumQuery = 6
    MaxTeamSumToPassQuery = 7
    MinTeamSumToPassQuery = 8


class CMsgInGamePredictionERandomSelectionGroupT(betterproto.Enum):
    EarlyGame = 0
    MidGame = 1
    LateGame = 2
    Count = 3


class CMsgDOTASeasonPredictionsPredictionEPredictionType(betterproto.Enum):
    Generic = 0
    Hero = 1
    Team = 2
    Player = 3
    Special = 4
    YesNo = 5
    QualifiersTeam = 6
    LastChanceTeam = 7


class CMsgDOTASeasonPredictionsPredictionEAnswerType(betterproto.Enum):
    SingleInt = 0
    SingleFloat = 1
    MultipleInt = 2
    MultipleFloat = 3
    AnswerTeam = 4
    SingleTime = 5
    MultipleTime = 6
    NoAnswer = 7


class CMsgDOTAMatchReplayState(betterproto.Enum):
    AVAILABLE = 0
    NOT_RECORDED = 1
    EXPIRED = 2


class CMsgDOTAMatchPlayerHeroDamageType(betterproto.Enum):
    PHYSICAL = 0
    MAGICAL = 1
    PURE = 2


class CMsgServerToGCRequestPlayerRecentAccomplishmentsResponseEResponse(betterproto.Enum):
    InternalError = 0
    Success = 1
    TooBusy = 2
    Disabled = 3


@dataclass
class CSODOTAGameAccountClient(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    wins: int = betterproto.uint32_field(3)
    losses: int = betterproto.uint32_field(4)
    xp: int = betterproto.uint32_field(12)
    level: int = betterproto.uint32_field(13)
    initial_skill: int = betterproto.uint32_field(14)
    leaver_count: int = betterproto.uint32_field(15)
    secondary_leaver_count: int = betterproto.uint32_field(58)
    low_priority_until_date: int = betterproto.uint32_field(18)
    prevent_text_chat_until_date: int = betterproto.uint32_field(20)
    prevent_voice_until_date: int = betterproto.uint32_field(21)
    prevent_public_text_chat_until_date: int = betterproto.uint32_field(86)
    prevent_new_player_chat_until_date: int = betterproto.uint32_field(122)
    last_abandoned_game_date: int = betterproto.uint32_field(22)
    last_secondary_abandoned_game_date: int = betterproto.uint32_field(59)
    leaver_penalty_count: int = betterproto.uint32_field(23)
    completed_game_streak: int = betterproto.uint32_field(24)
    account_disabled_until_date: int = betterproto.uint32_field(38)
    account_disabled_count: int = betterproto.uint32_field(39)
    match_disabled_until_date: int = betterproto.uint32_field(41)
    match_disabled_count: int = betterproto.uint32_field(42)
    shutdownlawterminatetimestamp: int = betterproto.uint32_field(47)
    low_priority_games_remaining: int = betterproto.uint32_field(48)
    recruitment_level: int = betterproto.uint32_field(55)
    has_new_notifications: bool = betterproto.bool_field(56)
    is_league_admin: bool = betterproto.bool_field(57)
    casual_games_played: int = betterproto.uint32_field(60)
    solo_competitive_games_played: int = betterproto.uint32_field(61)
    party_competitive_games_played: int = betterproto.uint32_field(62)
    casual_1v1_games_played: int = betterproto.uint32_field(65)
    curr_all_hero_challenge_id: int = betterproto.uint32_field(67)
    play_time_points: int = betterproto.uint32_field(68)
    account_flags: int = betterproto.uint32_field(69)
    play_time_level: int = betterproto.uint32_field(70)
    player_behavior_seq_num_last_report: int = betterproto.uint32_field(71)
    player_behavior_score_last_report: int = betterproto.uint32_field(72)
    player_behavior_report_old_data: bool = betterproto.bool_field(73)
    tourney_skill_level: int = betterproto.uint32_field(74)
    tourney_recent_participation_date: int = betterproto.uint32_field(85)
    anchored_phone_number_id: int = betterproto.uint64_field(88)
    ranked_matchmaking_ban_until_date: int = betterproto.uint32_field(89)
    recent_game_time_1: int = betterproto.uint32_field(90)
    recent_game_time_2: int = betterproto.uint32_field(91)
    recent_game_time_3: int = betterproto.uint32_field(92)
    favorite_team_packed: int = betterproto.uint64_field(103)
    recent_report_time: int = betterproto.uint32_field(104)
    custom_game_disabled_until_date: int = betterproto.uint32_field(105)
    recent_win_time_1: int = betterproto.uint32_field(106)
    recent_win_time_2: int = betterproto.uint32_field(107)
    recent_win_time_3: int = betterproto.uint32_field(108)
    coach_rating: int = betterproto.uint32_field(109)
    queue_points: int = betterproto.uint32_field(114)
    role_handicaps: list[CSODOTAGameAccountClientRoleHandicap] = betterproto.message_field(115)
    event_mode_recent_time: int = betterproto.uint32_field(120)
    mmr_recalibration_time: int = betterproto.uint32_field(121)


@dataclass
class CSODOTAGameAccountClientRoleHandicap(betterproto.Message):
    role: int = betterproto.uint32_field(1)
    handicap: float = betterproto.float_field(2)


@dataclass
class CSODOTAGameAccountPlus(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    original_start_date: int = betterproto.uint32_field(2)
    plus_flags: int = betterproto.uint32_field(3)
    plus_status: int = betterproto.uint32_field(4)
    prepaid_time_start: int = betterproto.uint32_field(5)
    prepaid_time_balance: int = betterproto.uint32_field(6)
    next_payment_date: float = betterproto.fixed32_field(7)
    steam_agreement_id: float = betterproto.fixed64_field(8)


@dataclass
class CSODOTAChatWheel(betterproto.Message):
    message_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgLobbyFeaturedGamemodeProgress(betterproto.Message):
    accounts: list[CMsgLobbyFeaturedGamemodeProgressAccountProgress] = betterproto.message_field(1)


@dataclass
class CMsgLobbyFeaturedGamemodeProgressAccountProgress(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    current_value: int = betterproto.uint32_field(2)
    max_value: int = betterproto.uint32_field(3)


@dataclass
class CMsgBattleCupVictory(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    win_date: int = betterproto.uint32_field(2)
    valid_until: int = betterproto.uint32_field(3)
    skill_level: int = betterproto.uint32_field(4)
    tournament_id: int = betterproto.uint32_field(5)
    division_id: int = betterproto.uint32_field(6)
    team_id: int = betterproto.uint32_field(7)
    streak: int = betterproto.uint32_field(8)
    trophy_id: int = betterproto.uint32_field(9)


@dataclass
class CMsgLobbyBattleCupVictoryList(betterproto.Message):
    winners: list[CMsgBattleCupVictory] = betterproto.message_field(1)


@dataclass
class CMsgDOTABroadcastNotification(betterproto.Message):
    message: str = betterproto.string_field(1)


@dataclass
class CProtoItemHeroStatue(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    status_effect_index: int = betterproto.uint32_field(2)
    sequence_name: str = betterproto.string_field(3)
    cycle: float = betterproto.float_field(4)
    wearable: list[int] = betterproto.uint32_field(5)
    inscription: str = betterproto.string_field(6)
    style: list[int] = betterproto.uint32_field(7)
    tournament_drop: bool = betterproto.bool_field(8)


@dataclass
class CMatchPlayerAbilityUpgrade(betterproto.Message):
    ability: int = betterproto.int32_field(1)
    time: int = betterproto.uint32_field(2)


@dataclass
class CMatchPlayerTimedCustomStat(betterproto.Message):
    stat: EDOTAMatchPlayerTimeCustomStat = betterproto.enum_field(2)
    value: float = betterproto.float_field(3)


@dataclass
class CMatchPlayerTimedStats(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    kills: int = betterproto.uint32_field(2)
    deaths: int = betterproto.uint32_field(3)
    assists: int = betterproto.uint32_field(4)
    net_worth: int = betterproto.uint32_field(5)
    xp: int = betterproto.uint32_field(6)
    last_hits: int = betterproto.uint32_field(7)
    denies: int = betterproto.uint32_field(8)
    bounty_rune_gold: int = betterproto.uint32_field(9)
    range_creep_upgrade_gold: int = betterproto.uint32_field(10)
    observer_wards_dewarded: int = betterproto.uint32_field(11)
    reliable_gold_earned: int = betterproto.uint32_field(12)
    gold_loss_prevented: int = betterproto.uint32_field(13)
    hero_kill_gold: int = betterproto.uint32_field(14)
    creep_kill_gold: int = betterproto.uint32_field(15)
    building_gold: int = betterproto.uint32_field(16)
    other_gold: int = betterproto.uint32_field(17)
    comeback_gold: int = betterproto.uint32_field(18)
    experimental_gold: int = betterproto.uint32_field(19)
    experimental2_gold: int = betterproto.uint32_field(20)
    creep_deny_gold: int = betterproto.uint32_field(21)
    tp_scrolls_purchased_1: int = betterproto.uint32_field(22)
    tp_scrolls_purchased_2: int = betterproto.uint32_field(23)
    tp_scrolls_purchased_3: int = betterproto.uint32_field(24)
    tp_scrolls_purchased_4: int = betterproto.uint32_field(25)
    tp_scrolls_purchased_5: int = betterproto.uint32_field(26)
    neutral_gold: int = betterproto.uint32_field(27)
    courier_gold: int = betterproto.uint32_field(28)
    roshan_gold: int = betterproto.uint32_field(29)
    income_gold: int = betterproto.uint32_field(30)
    item_value: int = betterproto.uint32_field(36)
    support_gold_spent: int = betterproto.uint32_field(37)
    camps_stacked: int = betterproto.uint32_field(38)
    wards_placed: int = betterproto.uint32_field(39)
    triple_kills: int = betterproto.uint32_field(40)
    rampages: int = betterproto.uint32_field(41)
    custom_stats: list[CMatchPlayerTimedCustomStat] = betterproto.message_field(42)


@dataclass
class CMatchTeamTimedStats(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    enemy_towers_killed: int = betterproto.uint32_field(2)
    enemy_barracks_killed: int = betterproto.uint32_field(3)
    enemy_towers_status: int = betterproto.uint32_field(4)
    enemy_barracks_status: int = betterproto.uint32_field(5)


@dataclass
class CMatchAdditionalUnitInventory(betterproto.Message):
    unit_name: str = betterproto.string_field(1)
    items: list[int] = betterproto.int32_field(2)


@dataclass
class CMatchPlayerPermanentBuff(betterproto.Message):
    permanent_buff: int = betterproto.uint32_field(1)
    stack_count: int = betterproto.uint32_field(2)
    grant_time: int = betterproto.uint32_field(3)


@dataclass
class CMatchHeroSelectEvent(betterproto.Message):
    is_pick: bool = betterproto.bool_field(1)
    team: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)


@dataclass
class CMatchClip(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    player_account_id: int = betterproto.uint32_field(2)
    game_time_seconds: int = betterproto.uint32_field(3)
    duration_seconds: int = betterproto.uint32_field(4)
    player_id: int = betterproto.uint32_field(5)
    hero_id: int = betterproto.uint32_field(6)
    ability_id: int = betterproto.int32_field(7)
    camera_mode: int = betterproto.uint32_field(8)
    comment: str = betterproto.string_field(9)


@dataclass
class CPartySearchClientParty(betterproto.Message):
    party_id: float = betterproto.fixed64_field(1)
    beacon_type: int = betterproto.int32_field(2)
    party_members: list[float] = betterproto.fixed32_field(3)


@dataclass
class CMsgDOTAHasItemQuery(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgDOTAHasItemResponse(betterproto.Message):
    has_item: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCGetPlayerCardItemInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    player_card_item_ids: list[int] = betterproto.uint64_field(2)
    all_for_event: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCGetPlayerCardItemInfoResponse(betterproto.Message):
    player_card_infos: list[CMsgGCGetPlayerCardItemInfoResponsePlayerCardInfo] = betterproto.message_field(1)


@dataclass
class CMsgGCGetPlayerCardItemInfoResponsePlayerCardInfo(betterproto.Message):
    player_card_item_id: int = betterproto.uint64_field(1)
    account_id: int = betterproto.uint32_field(2)
    packed_bonuses: int = betterproto.uint64_field(3)


@dataclass
class CSODOTAMapLocationState(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    location_id: int = betterproto.int32_field(2)
    completed: bool = betterproto.bool_field(3)


@dataclass
class CMsgLeagueAdminList(betterproto.Message):
    account_ids: list[int] = betterproto.uint32_field(1)


@dataclass
class CMsgDOTAProfileCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    slots: list[CMsgDOTAProfileCardSlot] = betterproto.message_field(3)
    badge_points: int = betterproto.uint32_field(4)
    event_points: int = betterproto.uint32_field(5)
    event_id: int = betterproto.uint32_field(6)
    recent_battle_cup_victory: CMsgBattleCupVictory = betterproto.message_field(7)
    rank_tier: int = betterproto.uint32_field(8)
    leaderboard_rank: int = betterproto.uint32_field(9)
    is_plus_subscriber: bool = betterproto.bool_field(10)
    plus_original_start_date: int = betterproto.uint32_field(11)
    rank_tier_score: int = betterproto.uint32_field(12)
    leaderboard_rank_core: int = betterproto.uint32_field(17)
    title: int = betterproto.uint32_field(23)
    favorite_team_packed: int = betterproto.uint64_field(24)
    lifetime_games: int = betterproto.uint32_field(25)


@dataclass
class CMsgDOTAProfileCardSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    trophy: CMsgDOTAProfileCardSlotTrophy = betterproto.message_field(2)
    stat: CMsgDOTAProfileCardSlotStat = betterproto.message_field(3)
    item: CMsgDOTAProfileCardSlotItem = betterproto.message_field(4)
    hero: CMsgDOTAProfileCardSlotHero = betterproto.message_field(5)
    emoticon: CMsgDOTAProfileCardSlotEmoticon = betterproto.message_field(6)
    team: CMsgDOTAProfileCardSlotTeam = betterproto.message_field(7)


@dataclass
class CMsgDOTAProfileCardSlotTrophy(betterproto.Message):
    trophy_id: int = betterproto.uint32_field(1)
    trophy_score: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAProfileCardSlotStat(betterproto.Message):
    stat_id: CMsgDOTAProfileCardEStatID = betterproto.enum_field(1)
    stat_score: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAProfileCardSlotItem(betterproto.Message):
    serialized_item: bytes = betterproto.bytes_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgDOTAProfileCardSlotHero(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    hero_wins: int = betterproto.uint32_field(2)
    hero_losses: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTAProfileCardSlotEmoticon(betterproto.Message):
    emoticon_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTAProfileCardSlotTeam(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)


@dataclass
class CSODOTAPlayerChallenge(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)
    slot_id: int = betterproto.uint32_field(3)
    int_param_0: int = betterproto.uint32_field(5)
    int_param_1: int = betterproto.uint32_field(6)
    created_time: int = betterproto.uint32_field(7)
    completed: int = betterproto.uint32_field(8)
    sequence_id: int = betterproto.uint32_field(9)
    challenge_tier: int = betterproto.uint32_field(10)
    flags: int = betterproto.uint32_field(11)
    attempts: int = betterproto.uint32_field(12)
    complete_limit: int = betterproto.uint32_field(13)
    quest_rank: int = betterproto.uint32_field(14)
    max_quest_rank: int = betterproto.uint32_field(15)
    instance_id: int = betterproto.uint32_field(16)
    hero_id: int = betterproto.uint32_field(17)
    template_id: int = betterproto.uint32_field(18)


@dataclass
class CMsgClientToGCRerollPlayerChallenge(betterproto.Message):
    event_id: EEvent = betterproto.enum_field(1)
    sequence_id: int = betterproto.uint32_field(3)
    hero_id: int = betterproto.uint32_field(4)


@dataclass
class CMsgGCRerollPlayerChallengeResponse(betterproto.Message):
    result: CMsgGCRerollPlayerChallengeResponseEResult = betterproto.enum_field(1)


@dataclass
class CMsgGCTopCustomGamesList(betterproto.Message):
    top_custom_games: list[int] = betterproto.uint64_field(1)
    game_of_the_day: int = betterproto.uint64_field(2)


@dataclass
class CMsgDOTARealtimeGameStats(betterproto.Message):
    match: CMsgDOTARealtimeGameStatsMatchDetails = betterproto.message_field(1)
    teams: list[CMsgDOTARealtimeGameStatsTeamDetails] = betterproto.message_field(2)
    buildings: list[CMsgDOTARealtimeGameStatsBuildingDetails] = betterproto.message_field(3)
    graph_data: CMsgDOTARealtimeGameStatsGraphData = betterproto.message_field(4)
    delta_frame: bool = betterproto.bool_field(5)


@dataclass
class CMsgDOTARealtimeGameStatsTeamDetails(betterproto.Message):
    team_number: int = betterproto.uint32_field(1)
    team_id: int = betterproto.uint32_field(2)
    team_name: str = betterproto.string_field(3)
    team_logo: float = betterproto.fixed64_field(4)
    team_tag: str = betterproto.string_field(10)
    score: int = betterproto.uint32_field(5)
    net_worth: int = betterproto.uint32_field(9)
    players: list[CMsgDOTARealtimeGameStatsPlayerDetails] = betterproto.message_field(6)
    only_team: bool = betterproto.bool_field(7)
    cheers: int = betterproto.uint32_field(8)
    team_logo_url: str = betterproto.string_field(11)


@dataclass
class CMsgDOTARealtimeGameStatsItemDetails(betterproto.Message):
    item_ability_id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    time: int = betterproto.int32_field(3)
    sold: bool = betterproto.bool_field(4)
    stackcount: int = betterproto.uint32_field(5)


@dataclass
class CMsgDOTARealtimeGameStatsAbilityDetails(betterproto.Message):
    id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    cooldown: float = betterproto.float_field(4)
    cooldown_max: float = betterproto.float_field(5)


@dataclass
class CMsgDOTARealtimeGameStatsHeroToHeroStats(betterproto.Message):
    victimid: int = betterproto.int32_field(1)
    kills: int = betterproto.uint32_field(2)
    assists: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTARealtimeGameStatsAbilityList(betterproto.Message):
    id: list[int] = betterproto.int32_field(1)


@dataclass
class CMsgDOTARealtimeGameStatsPlayerDetails(betterproto.Message):
    accountid: int = betterproto.uint32_field(1)
    playerid: int = betterproto.int32_field(2)
    name: str = betterproto.string_field(3)
    team: int = betterproto.uint32_field(4)
    heroid: int = betterproto.uint32_field(5)
    healthpoints: int = betterproto.uint32_field(6)
    maxhealthpoints: int = betterproto.uint32_field(7)
    healthregenrate: float = betterproto.float_field(8)
    manapoints: int = betterproto.uint32_field(9)
    maxmanapoints: int = betterproto.uint32_field(10)
    manaregenrate: float = betterproto.float_field(11)
    base_strength: int = betterproto.uint32_field(12)
    base_agility: int = betterproto.uint32_field(13)
    base_intelligence: int = betterproto.uint32_field(14)
    base_armor: int = betterproto.int32_field(15)
    base_movespeed: int = betterproto.uint32_field(16)
    base_damage: int = betterproto.uint32_field(17)
    strength: int = betterproto.uint32_field(18)
    agility: int = betterproto.uint32_field(19)
    intelligence: int = betterproto.uint32_field(20)
    armor: int = betterproto.int32_field(21)
    movespeed: int = betterproto.uint32_field(22)
    damage: int = betterproto.uint32_field(23)
    hero_damage: int = betterproto.uint32_field(24)
    tower_damage: int = betterproto.uint32_field(25)
    abilities: list[CMsgDOTARealtimeGameStatsAbilityDetails] = betterproto.message_field(26)
    level: int = betterproto.uint32_field(27)
    kill_count: int = betterproto.uint32_field(28)
    death_count: int = betterproto.uint32_field(29)
    assists_count: int = betterproto.uint32_field(30)
    denies_count: int = betterproto.uint32_field(31)
    lh_count: int = betterproto.uint32_field(32)
    hero_healing: int = betterproto.uint32_field(33)
    gold_per_min: int = betterproto.uint32_field(34)
    xp_per_min: int = betterproto.uint32_field(35)
    net_gold: int = betterproto.uint32_field(36)
    gold: int = betterproto.uint32_field(37)
    x: float = betterproto.float_field(38)
    y: float = betterproto.float_field(39)
    respawn_time: int = betterproto.int32_field(40)
    ultimate_cooldown: int = betterproto.uint32_field(41)
    has_buyback: bool = betterproto.bool_field(42)
    items: list[CMsgDOTARealtimeGameStatsItemDetails] = betterproto.message_field(43)
    stashitems: list[CMsgDOTARealtimeGameStatsItemDetails] = betterproto.message_field(44)
    itemshoppinglist: list[CMsgDOTARealtimeGameStatsItemDetails] = betterproto.message_field(45)
    levelpoints: list[CMsgDOTARealtimeGameStatsAbilityList] = betterproto.message_field(46)
    hero_to_hero_stats: list[CMsgDOTARealtimeGameStatsHeroToHeroStats] = betterproto.message_field(47)
    has_ultimate: bool = betterproto.bool_field(48)
    has_ultimate_mana: bool = betterproto.bool_field(49)
    team_slot: int = betterproto.uint32_field(50)


@dataclass
class CMsgDOTARealtimeGameStatsBuildingDetails(betterproto.Message):
    team: int = betterproto.uint32_field(2)
    heading: float = betterproto.float_field(3)
    lane: int = betterproto.uint32_field(4)
    tier: int = betterproto.uint32_field(5)
    type: int = betterproto.uint32_field(6)
    x: float = betterproto.float_field(7)
    y: float = betterproto.float_field(8)
    destroyed: bool = betterproto.bool_field(9)


@dataclass
class CMsgDOTARealtimeGameStatsKillDetails(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    death_time: int = betterproto.int32_field(2)
    killer_player_id: int = betterproto.int32_field(3)


@dataclass
class CMsgDOTARealtimeGameStatsBroadcasterDetails(betterproto.Message):
    player_id: int = betterproto.int32_field(1)


@dataclass
class CMsgDOTARealtimeGameStatsPickBanDetails(betterproto.Message):
    hero: int = betterproto.uint32_field(1)
    team: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTARealtimeGameStatsMatchDetails(betterproto.Message):
    server_steam_id: float = betterproto.fixed64_field(1)
    match_id: int = betterproto.uint64_field(2)
    timestamp: int = betterproto.uint32_field(3)
    time_of_day: float = betterproto.float_field(4)
    is_nightstalker_night: bool = betterproto.bool_field(5)
    game_time: int = betterproto.int32_field(6)
    game_state: int = betterproto.uint32_field(19)
    teamid_radiant: int = betterproto.uint32_field(8)
    teamid_dire: int = betterproto.uint32_field(9)
    picks: list[CMsgDOTARealtimeGameStatsPickBanDetails] = betterproto.message_field(10)
    bans: list[CMsgDOTARealtimeGameStatsPickBanDetails] = betterproto.message_field(11)
    kills: list[CMsgDOTARealtimeGameStatsKillDetails] = betterproto.message_field(12)
    broadcasters: list[CMsgDOTARealtimeGameStatsBroadcasterDetails] = betterproto.message_field(13)
    game_mode: int = betterproto.uint32_field(14)
    league_id: int = betterproto.uint32_field(15)
    league_node_id: int = betterproto.uint32_field(18)
    single_team: bool = betterproto.bool_field(16)
    cheers_peak: int = betterproto.uint32_field(17)
    lobby_type: int = betterproto.uint32_field(20)
    start_timestamp: int = betterproto.uint32_field(21)


@dataclass
class CMsgDOTARealtimeGameStatsGraphData(betterproto.Message):
    graph_gold: list[int] = betterproto.int32_field(1)
    graph_xp: list[int] = betterproto.int32_field(2)
    graph_kill: list[int] = betterproto.int32_field(3)
    graph_tower: list[int] = betterproto.int32_field(4)
    graph_rax: list[int] = betterproto.int32_field(5)
    team_loc_stats: list[CMsgDOTARealtimeGameStatsGraphDataTeamLocationStats] = betterproto.message_field(6)


@dataclass
class CMsgDOTARealtimeGameStatsGraphDataLocationStats(betterproto.Message):
    stats: list[int] = betterproto.int32_field(1)


@dataclass
class CMsgDOTARealtimeGameStatsGraphDataTeamLocationStats(betterproto.Message):
    loc_stats: list[CMsgDOTARealtimeGameStatsGraphDataLocationStats] = betterproto.message_field(1)


@dataclass
class CMsgDOTARealtimeGameStatsTerse(betterproto.Message):
    match: CMsgDOTARealtimeGameStatsTerseMatchDetails = betterproto.message_field(1)
    teams: list[CMsgDOTARealtimeGameStatsTerseTeamDetails] = betterproto.message_field(2)
    buildings: list[CMsgDOTARealtimeGameStatsTerseBuildingDetails] = betterproto.message_field(3)
    graph_data: CMsgDOTARealtimeGameStatsTerseGraphData = betterproto.message_field(4)
    delta_frame: bool = betterproto.bool_field(5)


@dataclass
class CMsgDOTARealtimeGameStatsTerseTeamDetails(betterproto.Message):
    team_number: int = betterproto.uint32_field(1)
    team_id: int = betterproto.uint32_field(2)
    team_name: str = betterproto.string_field(3)
    team_tag: str = betterproto.string_field(8)
    team_logo: float = betterproto.fixed64_field(4)
    score: int = betterproto.uint32_field(5)
    net_worth: int = betterproto.uint32_field(7)
    team_logo_url: str = betterproto.string_field(9)
    players: list[CMsgDOTARealtimeGameStatsTersePlayerDetails] = betterproto.message_field(6)


@dataclass
class CMsgDOTARealtimeGameStatsTersePlayerDetails(betterproto.Message):
    accountid: int = betterproto.uint32_field(1)
    playerid: int = betterproto.int32_field(2)
    name: str = betterproto.string_field(3)
    team: int = betterproto.uint32_field(4)
    heroid: int = betterproto.uint32_field(5)
    level: int = betterproto.uint32_field(6)
    kill_count: int = betterproto.uint32_field(7)
    death_count: int = betterproto.uint32_field(8)
    assists_count: int = betterproto.uint32_field(9)
    denies_count: int = betterproto.uint32_field(10)
    lh_count: int = betterproto.uint32_field(11)
    gold: int = betterproto.uint32_field(12)
    x: float = betterproto.float_field(13)
    y: float = betterproto.float_field(14)
    net_worth: int = betterproto.uint32_field(15)
    abilities: list[int] = betterproto.int32_field(16)
    items: list[int] = betterproto.int32_field(17)
    team_slot: int = betterproto.uint32_field(18)


@dataclass
class CMsgDOTARealtimeGameStatsTerseBuildingDetails(betterproto.Message):
    team: int = betterproto.uint32_field(1)
    heading: float = betterproto.float_field(2)
    type: int = betterproto.uint32_field(3)
    lane: int = betterproto.uint32_field(4)
    tier: int = betterproto.uint32_field(5)
    x: float = betterproto.float_field(6)
    y: float = betterproto.float_field(7)
    destroyed: bool = betterproto.bool_field(8)


@dataclass
class CMsgDOTARealtimeGameStatsTersePickBanDetails(betterproto.Message):
    hero: int = betterproto.uint32_field(1)
    team: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTARealtimeGameStatsTerseMatchDetails(betterproto.Message):
    server_steam_id: float = betterproto.fixed64_field(1)
    match_id: int = betterproto.uint64_field(2)
    timestamp: int = betterproto.uint32_field(3)
    game_time: int = betterproto.int32_field(4)
    steam_broadcaster_account_ids: list[int] = betterproto.uint32_field(6)
    game_mode: int = betterproto.uint32_field(7)
    league_id: int = betterproto.uint32_field(8)
    league_node_id: int = betterproto.uint32_field(9)
    game_state: int = betterproto.uint32_field(10)
    picks: list[CMsgDOTARealtimeGameStatsTersePickBanDetails] = betterproto.message_field(11)
    bans: list[CMsgDOTARealtimeGameStatsTersePickBanDetails] = betterproto.message_field(12)
    lobby_type: int = betterproto.uint32_field(13)
    start_timestamp: int = betterproto.uint32_field(14)


@dataclass
class CMsgDOTARealtimeGameStatsTerseGraphData(betterproto.Message):
    graph_gold: list[int] = betterproto.int32_field(1)


@dataclass
class CMsgDOTABroadcastTimelineEvent(betterproto.Message):
    event: EBroadcastTimelineEvent = betterproto.enum_field(1)
    timestamp: float = betterproto.fixed32_field(2)
    data: int = betterproto.uint32_field(3)
    string_data: str = betterproto.string_field(4)


@dataclass
class CMsgGCToClientMatchGroupsVersion(betterproto.Message):
    matchgroups_version: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTASDOHeroStatsHistory(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    game_mode: int = betterproto.uint32_field(2)
    lobby_type: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)
    won: bool = betterproto.bool_field(5)
    gpm: int = betterproto.uint32_field(6)
    xpm: int = betterproto.uint32_field(7)
    kills: int = betterproto.uint32_field(8)
    deaths: int = betterproto.uint32_field(9)
    assists: int = betterproto.uint32_field(10)


@dataclass
class CMsgPredictionChoice(betterproto.Message):
    value: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    min_raw_value: int = betterproto.uint32_field(3)
    max_raw_value: int = betterproto.uint32_field(4)


@dataclass
class CMsgInGamePrediction(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    type: CMsgInGamePredictionEPredictionType = betterproto.enum_field(3)
    group: CMsgInGamePredictionERandomSelectionGroupT = betterproto.enum_field(4)
    question: str = betterproto.string_field(5)
    choices: list[CMsgPredictionChoice] = betterproto.message_field(6)
    required_heroes: list[str] = betterproto.string_field(7)
    query_name: str = betterproto.string_field(8)
    query_values: list[CMsgInGamePredictionQueryKeyValues] = betterproto.message_field(9)
    answer_resolution_type: CMsgInGamePredictionEResolutionTypeT = betterproto.enum_field(10)
    points_to_grant: int = betterproto.uint32_field(11)
    reward_action: int = betterproto.uint32_field(12)
    debug_force_selection: int = betterproto.uint32_field(13)
    raw_value_type: CMsgInGamePredictionERawValueTypeT = betterproto.enum_field(14)


@dataclass
class CMsgInGamePredictionQueryKeyValues(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class CMsgDOTASeasonPredictions(betterproto.Message):
    predictions: list[CMsgDOTASeasonPredictionsPrediction] = betterproto.message_field(1)
    in_game_predictions: list[CMsgInGamePrediction] = betterproto.message_field(2)
    in_game_prediction_count_per_game: int = betterproto.uint32_field(3)
    in_game_prediction_voting_period_minutes: int = betterproto.uint32_field(4)


@dataclass
class CMsgDOTASeasonPredictionsPrediction(betterproto.Message):
    type: CMsgDOTASeasonPredictionsPredictionEPredictionType = betterproto.enum_field(1)
    question: str = betterproto.string_field(2)
    choices: list[CMsgPredictionChoice] = betterproto.message_field(3)
    selection_id: int = betterproto.uint32_field(4)
    start_date: int = betterproto.uint32_field(5)
    lock_date: int = betterproto.uint32_field(6)
    reward: int = betterproto.uint32_field(7)
    answer_type: CMsgDOTASeasonPredictionsPredictionEAnswerType = betterproto.enum_field(8)
    answer_id: int = betterproto.uint32_field(9)
    answers: list[CMsgDOTASeasonPredictionsPredictionAnswers] = betterproto.message_field(10)
    query_name: str = betterproto.string_field(11)
    lock_on_selection_id: int = betterproto.uint32_field(13)
    lock_on_selection_value: int = betterproto.uint32_field(14)
    lock_on_selection_set: bool = betterproto.bool_field(15)
    use_answer_value_ranges: bool = betterproto.bool_field(16)
    region: ELeagueRegion = betterproto.enum_field(17)
    phases: list[ELeaguePhase] = betterproto.enum_field(18)
    reward_event: EEvent = betterproto.enum_field(19)


@dataclass
class CMsgDOTASeasonPredictionsPredictionAnswers(betterproto.Message):
    answer_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgAvailablePredictions(betterproto.Message):
    match_predictions: list[CMsgAvailablePredictionsMatchPrediction] = betterproto.message_field(1)


@dataclass
class CMsgAvailablePredictionsMatchPrediction(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    predictions: list[CMsgInGamePrediction] = betterproto.message_field(2)


@dataclass
class CMsgLeagueWatchedGames(betterproto.Message):
    leagues: list[CMsgLeagueWatchedGamesLeague] = betterproto.message_field(1)


@dataclass
class CMsgLeagueWatchedGamesSeries(betterproto.Message):
    node_id: int = betterproto.uint32_field(1)
    game: list[int] = betterproto.uint32_field(2)


@dataclass
class CMsgLeagueWatchedGamesLeague(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    series: list[CMsgLeagueWatchedGamesSeries] = betterproto.message_field(2)


@dataclass
class CMsgDOTAMatch(betterproto.Message):
    duration: int = betterproto.uint32_field(3)
    starttime: float = betterproto.fixed32_field(4)
    players: list[CMsgDOTAMatchPlayer] = betterproto.message_field(5)
    match_id: int = betterproto.uint64_field(6)
    tower_status: list[int] = betterproto.uint32_field(8)
    barracks_status: list[int] = betterproto.uint32_field(9)
    cluster: int = betterproto.uint32_field(10)
    first_blood_time: int = betterproto.uint32_field(12)
    replay_salt: float = betterproto.fixed32_field(13)
    server_ip: float = betterproto.fixed32_field(14)
    server_port: int = betterproto.uint32_field(15)
    lobby_type: int = betterproto.uint32_field(16)
    human_players: int = betterproto.uint32_field(17)
    average_skill: int = betterproto.uint32_field(18)
    game_balance: float = betterproto.float_field(19)
    radiant_team_id: int = betterproto.uint32_field(20)
    dire_team_id: int = betterproto.uint32_field(21)
    leagueid: int = betterproto.uint32_field(22)
    radiant_team_name: str = betterproto.string_field(23)
    dire_team_name: str = betterproto.string_field(24)
    radiant_team_logo: int = betterproto.uint64_field(25)
    dire_team_logo: int = betterproto.uint64_field(26)
    radiant_team_logo_url: str = betterproto.string_field(54)
    dire_team_logo_url: str = betterproto.string_field(55)
    radiant_team_complete: int = betterproto.uint32_field(27)
    dire_team_complete: int = betterproto.uint32_field(28)
    game_mode: DOTAGameMode = betterproto.enum_field(31)
    picks_bans: list[CMatchHeroSelectEvent] = betterproto.message_field(32)
    match_seq_num: int = betterproto.uint64_field(33)
    replay_state: CMsgDOTAMatchReplayState = betterproto.enum_field(34)
    radiant_guild_id: int = betterproto.uint32_field(35)
    dire_guild_id: int = betterproto.uint32_field(36)
    radiant_team_tag: str = betterproto.string_field(37)
    dire_team_tag: str = betterproto.string_field(38)
    series_id: int = betterproto.uint32_field(39)
    series_type: int = betterproto.uint32_field(40)
    broadcaster_channels: list[CMsgDOTAMatchBroadcasterChannel] = betterproto.message_field(43)
    engine: int = betterproto.uint32_field(44)
    custom_game_data: CMsgDOTAMatchCustomGameData = betterproto.message_field(45)
    match_flags: int = betterproto.uint32_field(46)
    private_metadata_key: float = betterproto.fixed32_field(47)
    radiant_team_score: int = betterproto.uint32_field(48)
    dire_team_score: int = betterproto.uint32_field(49)
    match_outcome: EMatchOutcome = betterproto.enum_field(50)
    tournament_id: int = betterproto.uint32_field(51)
    tournament_round: int = betterproto.uint32_field(52)
    pre_game_duration: int = betterproto.uint32_field(53)
    coaches: list[CMsgDOTAMatchCoach] = betterproto.message_field(57)


@dataclass
class CMsgDOTAMatchPlayer(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    player_slot: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)
    item_0: int = betterproto.int32_field(4)
    item_1: int = betterproto.int32_field(5)
    item_2: int = betterproto.int32_field(6)
    item_3: int = betterproto.int32_field(7)
    item_4: int = betterproto.int32_field(8)
    item_5: int = betterproto.int32_field(9)
    item_6: int = betterproto.int32_field(59)
    item_7: int = betterproto.int32_field(60)
    item_8: int = betterproto.int32_field(61)
    item_9: int = betterproto.int32_field(76)
    expected_team_contribution: float = betterproto.float_field(10)
    scaled_metric: float = betterproto.float_field(11)
    previous_rank: int = betterproto.uint32_field(12)
    rank_change: int = betterproto.sint32_field(13)
    mmr_type: int = betterproto.uint32_field(74)
    kills: int = betterproto.uint32_field(14)
    deaths: int = betterproto.uint32_field(15)
    assists: int = betterproto.uint32_field(16)
    leaver_status: int = betterproto.uint32_field(17)
    gold: int = betterproto.uint32_field(18)
    last_hits: int = betterproto.uint32_field(19)
    denies: int = betterproto.uint32_field(20)
    gold_per_min: int = betterproto.uint32_field(21)
    xp_per_min: int = betterproto.uint32_field(22)
    gold_spent: int = betterproto.uint32_field(23)
    hero_damage: int = betterproto.uint32_field(24)
    tower_damage: int = betterproto.uint32_field(25)
    hero_healing: int = betterproto.uint32_field(26)
    level: int = betterproto.uint32_field(27)
    time_last_seen: int = betterproto.uint32_field(28)
    player_name: str = betterproto.string_field(29)
    support_ability_value: int = betterproto.uint32_field(30)
    feeding_detected: bool = betterproto.bool_field(32)
    search_rank: int = betterproto.uint32_field(34)
    search_rank_uncertainty: int = betterproto.uint32_field(35)
    rank_uncertainty_change: int = betterproto.int32_field(36)
    hero_play_count: int = betterproto.uint32_field(37)
    party_id: float = betterproto.fixed64_field(38)
    scaled_hero_damage: int = betterproto.uint32_field(54)
    scaled_tower_damage: int = betterproto.uint32_field(55)
    scaled_hero_healing: int = betterproto.uint32_field(56)
    scaled_kills: float = betterproto.float_field(39)
    scaled_deaths: float = betterproto.float_field(40)
    scaled_assists: float = betterproto.float_field(41)
    claimed_farm_gold: int = betterproto.uint32_field(42)
    support_gold: int = betterproto.uint32_field(43)
    claimed_denies: int = betterproto.uint32_field(44)
    claimed_misses: int = betterproto.uint32_field(45)
    misses: int = betterproto.uint32_field(46)
    ability_upgrades: list[CMatchPlayerAbilityUpgrade] = betterproto.message_field(47)
    additional_units_inventory: list[CMatchAdditionalUnitInventory] = betterproto.message_field(48)
    permanent_buffs: list[CMatchPlayerPermanentBuff] = betterproto.message_field(57)
    pro_name: str = betterproto.string_field(72)
    real_name: str = betterproto.string_field(73)
    custom_game_data: CMsgDOTAMatchPlayerCustomGameData = betterproto.message_field(50)
    active_plus_subscription: bool = betterproto.bool_field(51)
    net_worth: int = betterproto.uint32_field(52)
    bot_difficulty: int = betterproto.uint32_field(58)
    hero_pick_order: int = betterproto.uint32_field(63)
    hero_was_randomed: bool = betterproto.bool_field(64)
    hero_was_dota_plus_suggestion: bool = betterproto.bool_field(69)
    hero_damage_received: list[CMsgDOTAMatchPlayerHeroDamageReceived] = betterproto.message_field(67)
    hero_damage_dealt: list[CMsgDOTAMatchPlayerHeroDamageReceived] = betterproto.message_field(79)
    seconds_dead: int = betterproto.uint32_field(70)
    gold_lost_to_death: int = betterproto.uint32_field(71)
    lane_selection_flags: int = betterproto.uint32_field(75)
    bounty_runes: int = betterproto.uint32_field(77)
    outposts_captured: int = betterproto.uint32_field(78)
    team_number: DOTAGCTeam = betterproto.enum_field(80)
    team_slot: int = betterproto.uint32_field(81)


@dataclass
class CMsgDOTAMatchPlayerCustomGameData(betterproto.Message):
    dota_team: int = betterproto.uint32_field(1)
    winner: bool = betterproto.bool_field(2)


@dataclass
class CMsgDOTAMatchPlayerHeroDamageReceived(betterproto.Message):
    pre_reduction: int = betterproto.uint32_field(1)
    post_reduction: int = betterproto.uint32_field(2)
    damage_type: CMsgDOTAMatchPlayerHeroDamageType = betterproto.enum_field(3)


@dataclass
class CMsgDOTAMatchBroadcasterInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class CMsgDOTAMatchBroadcasterChannel(betterproto.Message):
    country_code: str = betterproto.string_field(1)
    description: str = betterproto.string_field(2)
    broadcaster_infos: list[CMsgDOTAMatchBroadcasterInfo] = betterproto.message_field(3)
    language_code: str = betterproto.string_field(4)


@dataclass
class CMsgDOTAMatchCoach(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    coach_name: str = betterproto.string_field(2)
    coach_rating: int = betterproto.uint32_field(3)
    coach_team: int = betterproto.uint32_field(4)
    coach_party_id: int = betterproto.uint64_field(5)
    is_private_coach: bool = betterproto.bool_field(6)


@dataclass
class CMsgDOTAMatchCustomGameData(betterproto.Message):
    custom_game_id: int = betterproto.uint64_field(1)
    map_name: str = betterproto.string_field(2)


@dataclass
class CMsgPlayerCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    stat_modifier: list[CMsgPlayerCardStatModifier] = betterproto.message_field(2)


@dataclass
class CMsgPlayerCardStatModifier(betterproto.Message):
    stat: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAFantasyPlayerStats(betterproto.Message):
    player_account_id: int = betterproto.uint32_field(1)
    match_id: int = betterproto.uint64_field(2)
    match_completed: bool = betterproto.bool_field(3)
    team_id: int = betterproto.uint32_field(4)
    league_id: int = betterproto.uint32_field(5)
    delay: int = betterproto.uint32_field(6)
    series_id: int = betterproto.uint32_field(7)
    series_type: int = betterproto.uint32_field(8)
    kills: int = betterproto.uint32_field(10)
    deaths: int = betterproto.uint32_field(11)
    cs: int = betterproto.uint32_field(12)
    gpm: float = betterproto.float_field(13)
    tower_kills: int = betterproto.uint32_field(14)
    roshan_kills: int = betterproto.uint32_field(15)
    teamfight_participation: float = betterproto.float_field(16)
    wards_placed: int = betterproto.uint32_field(17)
    camps_stacked: int = betterproto.uint32_field(18)
    runes_grabbed: int = betterproto.uint32_field(19)
    first_blood: int = betterproto.uint32_field(20)
    stuns: float = betterproto.float_field(21)
    smokes: int = betterproto.uint32_field(22)
    neutral_tokens: int = betterproto.uint32_field(23)
    watchers: int = betterproto.uint32_field(24)
    lotuses: int = betterproto.uint32_field(25)
    tormentors: int = betterproto.uint32_field(26)
    courier_kills: int = betterproto.uint32_field(27)
    title_stats: float = betterproto.fixed64_field(28)


@dataclass
class CMsgDOTAFantasyPlayerMatchStats(betterproto.Message):
    matches: list[CMsgDOTAFantasyPlayerStats] = betterproto.message_field(1)


@dataclass
class CMsgDOTABotDebugInfo(betterproto.Message):
    bots: list[CMsgDOTABotDebugInfoBot] = betterproto.message_field(1)
    desire_push_lane_top: float = betterproto.float_field(2)
    desire_push_lane_mid: float = betterproto.float_field(3)
    desire_push_lane_bot: float = betterproto.float_field(4)
    desire_defend_lane_top: float = betterproto.float_field(5)
    desire_defend_lane_mid: float = betterproto.float_field(6)
    desire_defend_lane_bot: float = betterproto.float_field(7)
    desire_farm_lane_top: float = betterproto.float_field(8)
    desire_farm_lane_mid: float = betterproto.float_field(9)
    desire_farm_lane_bot: float = betterproto.float_field(10)
    desire_farm_roshan: float = betterproto.float_field(11)
    execution_time: float = betterproto.float_field(12)
    rune_status: list[int] = betterproto.uint32_field(13)


@dataclass
class CMsgDOTABotDebugInfoBot(betterproto.Message):
    player_owner_id: int = betterproto.int32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    difficulty: int = betterproto.uint32_field(3)
    power_current: int = betterproto.uint32_field(4)
    power_max: int = betterproto.uint32_field(5)
    move_target_x: int = betterproto.uint32_field(6)
    move_target_y: int = betterproto.uint32_field(7)
    move_target_z: int = betterproto.uint32_field(8)
    active_mode_id: int = betterproto.uint32_field(9)
    execution_time: float = betterproto.float_field(10)
    modes: list[CMsgDOTABotDebugInfoBotMode] = betterproto.message_field(11)
    action: CMsgDOTABotDebugInfoBotAction = betterproto.message_field(12)


@dataclass
class CMsgDOTABotDebugInfoBotMode(betterproto.Message):
    mode_id: int = betterproto.uint32_field(1)
    desire: float = betterproto.float_field(2)
    target_entity: int = betterproto.int32_field(3)
    target_x: int = betterproto.uint32_field(4)
    target_y: int = betterproto.uint32_field(5)
    target_z: int = betterproto.uint32_field(6)


@dataclass
class CMsgDOTABotDebugInfoBotAction(betterproto.Message):
    action_id: int = betterproto.uint32_field(1)
    action_target: str = betterproto.string_field(2)


@dataclass
class CMsgSuccessfulHero(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    win_percent: float = betterproto.float_field(2)
    longest_streak: int = betterproto.uint32_field(3)


@dataclass
class CMsgRecentMatchInfo(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    game_mode: DOTAGameMode = betterproto.enum_field(2)
    kills: int = betterproto.uint32_field(3)
    deaths: int = betterproto.uint32_field(4)
    assists: int = betterproto.uint32_field(5)
    duration: int = betterproto.uint32_field(6)
    player_slot: int = betterproto.uint32_field(7)
    match_outcome: EMatchOutcome = betterproto.enum_field(8)
    timestamp: int = betterproto.uint32_field(9)
    lobby_type: int = betterproto.uint32_field(10)
    team_number: int = betterproto.uint32_field(11)


@dataclass
class CMsgMatchTips(betterproto.Message):
    tips: list[CMsgMatchTipsSingleTip] = betterproto.message_field(2)


@dataclass
class CMsgMatchTipsSingleTip(betterproto.Message):
    source_account_id: int = betterproto.uint32_field(1)
    target_account_id: int = betterproto.uint32_field(2)
    tip_amount: int = betterproto.uint32_field(3)
    event_id: EEvent = betterproto.enum_field(4)


@dataclass
class CMsgDOTAMatchMinimal(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    start_time: float = betterproto.fixed32_field(2)
    duration: int = betterproto.uint32_field(3)
    game_mode: DOTAGameMode = betterproto.enum_field(4)
    players: list[CMsgDOTAMatchMinimalPlayer] = betterproto.message_field(6)
    tourney: CMsgDOTAMatchMinimalTourney = betterproto.message_field(7)
    match_outcome: EMatchOutcome = betterproto.enum_field(8)
    radiant_score: int = betterproto.uint32_field(9)
    dire_score: int = betterproto.uint32_field(10)
    lobby_type: int = betterproto.uint32_field(11)


@dataclass
class CMsgDOTAMatchMinimalPlayer(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    kills: int = betterproto.uint32_field(3)
    deaths: int = betterproto.uint32_field(4)
    assists: int = betterproto.uint32_field(5)
    items: list[int] = betterproto.int32_field(6)
    player_slot: int = betterproto.uint32_field(7)
    pro_name: str = betterproto.string_field(8)
    level: int = betterproto.uint32_field(9)
    team_number: DOTAGCTeam = betterproto.enum_field(10)


@dataclass
class CMsgDOTAMatchMinimalTourney(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    series_type: int = betterproto.uint32_field(8)
    series_game: int = betterproto.uint32_field(9)
    weekend_tourney_tournament_id: int = betterproto.uint32_field(10)
    weekend_tourney_season_trophy_id: int = betterproto.uint32_field(11)
    weekend_tourney_division: int = betterproto.uint32_field(12)
    weekend_tourney_skill_level: int = betterproto.uint32_field(13)
    radiant_team_id: int = betterproto.uint32_field(2)
    radiant_team_name: str = betterproto.string_field(3)
    radiant_team_logo: float = betterproto.fixed64_field(4)
    radiant_team_logo_url: str = betterproto.string_field(14)
    dire_team_id: int = betterproto.uint32_field(5)
    dire_team_name: str = betterproto.string_field(6)
    dire_team_logo: float = betterproto.fixed64_field(7)
    dire_team_logo_url: str = betterproto.string_field(15)


@dataclass
class CMsgConsumableUsage(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    quantity_change: int = betterproto.int32_field(2)


@dataclass
class CMsgMatchConsumableUsage(betterproto.Message):
    player_consumables_used: list[CMsgMatchConsumableUsagePlayerUsage] = betterproto.message_field(1)


@dataclass
class CMsgMatchConsumableUsagePlayerUsage(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    consumables_used: list[CMsgConsumableUsage] = betterproto.message_field(2)


@dataclass
class CMsgMatchEventActionGrants(betterproto.Message):
    player_grants: list[CMsgMatchEventActionGrantsPlayerGrants] = betterproto.message_field(1)


@dataclass
class CMsgMatchEventActionGrantsPlayerGrants(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    actions_granted: list[CMsgPendingEventAward] = betterproto.message_field(3)


@dataclass
class CMsgCustomGameWhitelist(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    custom_games_whitelist: list[int] = betterproto.uint64_field(2)
    disable_whitelist: bool = betterproto.bool_field(3)


@dataclass
class CMsgCustomGameWhitelistForEdit(betterproto.Message):
    whitelist_entries: list[CMsgCustomGameWhitelistForEditWhitelistEntry] = betterproto.message_field(1)


@dataclass
class CMsgCustomGameWhitelistForEditWhitelistEntry(betterproto.Message):
    custom_game_id: int = betterproto.uint64_field(1)
    whitelist_state: ECustomGameWhitelistState = betterproto.enum_field(2)


@dataclass
class CMsgPlayerRecentMatchInfo(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    timestamp: int = betterproto.uint32_field(2)
    duration: int = betterproto.uint32_field(3)
    win: bool = betterproto.bool_field(4)
    hero_id: int = betterproto.uint32_field(5)
    kills: int = betterproto.uint32_field(6)
    deaths: int = betterproto.uint32_field(7)
    assists: int = betterproto.uint32_field(8)


@dataclass
class CMsgPlayerMatchRecord(betterproto.Message):
    wins: int = betterproto.uint32_field(1)
    losses: int = betterproto.uint32_field(2)


@dataclass
class CMsgPlayerRecentMatchOutcomes(betterproto.Message):
    outcomes: int = betterproto.uint32_field(1)
    match_count: int = betterproto.uint32_field(2)


@dataclass
class CMsgPlayerRecentCommends(betterproto.Message):
    commends: int = betterproto.uint32_field(1)
    match_count: int = betterproto.uint32_field(2)


@dataclass
class CMsgPlayerRecentAccomplishments(betterproto.Message):
    recent_outcomes: CMsgPlayerRecentMatchOutcomes = betterproto.message_field(1)
    total_record: CMsgPlayerMatchRecord = betterproto.message_field(2)
    prediction_streak: int = betterproto.uint32_field(3)
    plus_prediction_streak: int = betterproto.uint32_field(4)
    recent_commends: CMsgPlayerRecentCommends = betterproto.message_field(5)
    first_match_timestamp: int = betterproto.uint32_field(6)
    last_match: CMsgPlayerRecentMatchInfo = betterproto.message_field(7)
    recent_mvps: CMsgPlayerRecentMatchOutcomes = betterproto.message_field(8)


@dataclass
class CMsgPlayerHeroRecentAccomplishments(betterproto.Message):
    recent_outcomes: CMsgPlayerRecentMatchOutcomes = betterproto.message_field(1)
    total_record: CMsgPlayerMatchRecord = betterproto.message_field(2)
    last_match: CMsgPlayerRecentMatchInfo = betterproto.message_field(3)


@dataclass
class CMsgRecentAccomplishments(betterproto.Message):
    player_accomplishments: CMsgPlayerRecentAccomplishments = betterproto.message_field(1)
    hero_accomplishments: CMsgPlayerHeroRecentAccomplishments = betterproto.message_field(2)


@dataclass
class CMsgServerToGCRequestPlayerRecentAccomplishments(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse(betterproto.Message):
    result: CMsgServerToGCRequestPlayerRecentAccomplishmentsResponseEResponse = betterproto.enum_field(1)
    player_accomplishments: CMsgRecentAccomplishments = betterproto.message_field(2)


@dataclass
class CMsgArcanaVoteMatchVotes(betterproto.Message):
    match_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    vote_count: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCtoGCAssociatedExploiterAccountInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    num_matches_to_search: int = betterproto.uint32_field(2)
    min_shared_match_count: int = betterproto.uint32_field(3)
    num_additional_players: int = betterproto.uint32_field(4)


@dataclass
class CMsgGCtoGCAssociatedExploiterAccountInfoResponse(betterproto.Message):
    accounts: list[CMsgGCtoGCAssociatedExploiterAccountInfoResponseAccount] = betterproto.message_field(1)


@dataclass
class CMsgGCtoGCAssociatedExploiterAccountInfoResponseAccount(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    num_common_matches: int = betterproto.uint32_field(2)
    earliest_common_match: int = betterproto.uint32_field(3)
    latest_common_match: int = betterproto.uint32_field(4)
    generation: int = betterproto.uint32_field(5)
    persona: str = betterproto.string_field(6)
    already_banned: bool = betterproto.bool_field(7)


@dataclass
class CMsgPullTabsData(betterproto.Message):
    slots: list[CMsgPullTabsDataSlot] = betterproto.message_field(1)
    jackpots: list[CMsgPullTabsDataJackpot] = betterproto.message_field(2)
    last_board: int = betterproto.uint32_field(3)


@dataclass
class CMsgPullTabsDataSlot(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    board_id: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)
    action_id: int = betterproto.uint32_field(4)
    redeemed: bool = betterproto.bool_field(5)


@dataclass
class CMsgPullTabsDataJackpot(betterproto.Message):
    board_id: int = betterproto.uint32_field(1)
    action_id: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgUnderDraftData(betterproto.Message):
    bench_slots: list[CMsgUnderDraftDataBenchSlot] = betterproto.message_field(1)
    shop_slots: list[CMsgUnderDraftDataShopSlot] = betterproto.message_field(2)
    gold: int = betterproto.uint32_field(3)
    total_gold: int = betterproto.uint32_field(4)
    not_restorable: bool = betterproto.bool_field(5)


@dataclass
class CMsgUnderDraftDataBenchSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    stars: int = betterproto.uint32_field(3)


@dataclass
class CMsgUnderDraftDataShopSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    is_special_reward: bool = betterproto.bool_field(3)


@dataclass
class CMsgPlayerTitleData(betterproto.Message):
    title: list[int] = betterproto.uint32_field(1)
    event_id: list[int] = betterproto.uint32_field(2)
    active: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTATriviaQuestion(betterproto.Message):
    question_id: int = betterproto.uint32_field(1)
    category: EDOTATriviaQuestionCategory = betterproto.enum_field(2)
    timestamp: int = betterproto.uint32_field(3)
    question_value: str = betterproto.string_field(4)
    answer_values: list[str] = betterproto.string_field(5)
    correct_answer_index: int = betterproto.uint32_field(6)


@dataclass
class CMsgDOTATriviaQuestionAnswersSummary(betterproto.Message):
    summary_available: bool = betterproto.bool_field(1)
    picked_count: list[int] = betterproto.uint32_field(2)


@dataclass
class CMsgGameDataSpecialValueBonus(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: float = betterproto.float_field(2)
    operation: int = betterproto.uint32_field(3)


@dataclass
class CMsgGameDataSpecialValues(betterproto.Message):
    name: str = betterproto.string_field(1)
    values_float: list[float] = betterproto.float_field(2)
    is_percentage: bool = betterproto.bool_field(4)
    heading_loc: str = betterproto.string_field(5)
    bonuses: list[CMsgGameDataSpecialValueBonus] = betterproto.message_field(6)
    values_shard: list[float] = betterproto.float_field(7)
    values_scepter: list[float] = betterproto.float_field(8)


@dataclass
class CMsgGameDataAbilityOrItem(betterproto.Message):
    id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    name_loc: str = betterproto.string_field(5)
    desc_loc: str = betterproto.string_field(6)
    lore_loc: str = betterproto.string_field(7)
    notes_loc: list[str] = betterproto.string_field(8)
    shard_loc: str = betterproto.string_field(9)
    scepter_loc: str = betterproto.string_field(10)
    type: int = betterproto.uint32_field(20)
    behavior: int = betterproto.uint64_field(21)
    target_team: int = betterproto.uint32_field(22)
    target_type: int = betterproto.uint32_field(23)
    flags: int = betterproto.uint32_field(24)
    damage: int = betterproto.uint32_field(25)
    immunity: int = betterproto.uint32_field(26)
    dispellable: int = betterproto.uint32_field(27)
    max_level: int = betterproto.uint32_field(28)
    cast_ranges: list[int] = betterproto.uint32_field(30)
    cast_points: list[float] = betterproto.float_field(31)
    channel_times: list[float] = betterproto.float_field(32)
    cooldowns: list[float] = betterproto.float_field(33)
    durations: list[float] = betterproto.float_field(34)
    damages: list[int] = betterproto.uint32_field(35)
    mana_costs: list[int] = betterproto.uint32_field(36)
    gold_costs: list[int] = betterproto.uint32_field(37)
    health_costs: list[int] = betterproto.uint32_field(38)
    special_values: list[CMsgGameDataSpecialValues] = betterproto.message_field(40)
    is_item: bool = betterproto.bool_field(50)
    ability_has_scepter: bool = betterproto.bool_field(60)
    ability_has_shard: bool = betterproto.bool_field(61)
    ability_is_granted_by_scepter: bool = betterproto.bool_field(62)
    ability_is_granted_by_shard: bool = betterproto.bool_field(63)
    item_cost: int = betterproto.uint32_field(70)
    item_initial_charges: int = betterproto.uint32_field(71)
    item_neutral_tier: int = betterproto.uint32_field(72)
    item_stock_max: int = betterproto.uint32_field(73)
    item_stock_time: float = betterproto.float_field(74)
    item_quality: int = betterproto.uint32_field(85)


@dataclass
class CMsgGameDataHero(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    order_id: int = betterproto.uint32_field(3)
    name_loc: str = betterproto.string_field(5)
    bio_loc: str = betterproto.string_field(6)
    hype_loc: str = betterproto.string_field(7)
    npe_desc_loc: str = betterproto.string_field(8)
    str_base: int = betterproto.uint32_field(10)
    str_gain: float = betterproto.float_field(11)
    agi_base: int = betterproto.uint32_field(12)
    agi_gain: float = betterproto.float_field(13)
    int_base: int = betterproto.uint32_field(14)
    int_gain: float = betterproto.float_field(15)
    primary_attr: int = betterproto.uint32_field(20)
    complexity: int = betterproto.uint32_field(21)
    attack_capability: int = betterproto.uint32_field(22)
    role_levels: list[int] = betterproto.uint32_field(23)
    damage_min: int = betterproto.int32_field(24)
    damage_max: int = betterproto.int32_field(25)
    attack_rate: float = betterproto.float_field(26)
    attack_range: int = betterproto.uint32_field(27)
    projectile_speed: int = betterproto.uint32_field(28)
    armor: float = betterproto.float_field(29)
    magic_resistance: int = betterproto.uint32_field(30)
    movement_speed: int = betterproto.uint32_field(31)
    turn_rate: float = betterproto.float_field(32)
    sight_range_day: int = betterproto.uint32_field(33)
    sight_range_night: int = betterproto.uint32_field(34)
    max_health: int = betterproto.uint32_field(35)
    health_regen: float = betterproto.float_field(36)
    max_mana: int = betterproto.uint32_field(37)
    mana_regen: float = betterproto.float_field(38)
    abilities: list[CMsgGameDataAbilityOrItem] = betterproto.message_field(40)
    talents: list[CMsgGameDataAbilityOrItem] = betterproto.message_field(41)


@dataclass
class CMsgGameDataAbilities(betterproto.Message):
    abilities: list[CMsgGameDataAbilityOrItem] = betterproto.message_field(1)


@dataclass
class CMsgGameDataItems(betterproto.Message):
    items: list[CMsgGameDataAbilityOrItem] = betterproto.message_field(1)


@dataclass
class CMsgGameDataHeroes(betterproto.Message):
    heroes: list[CMsgGameDataHero] = betterproto.message_field(1)


@dataclass
class CMsgGameDataHeroList(betterproto.Message):
    heroes: list[CMsgGameDataHeroListHeroInfo] = betterproto.message_field(1)


@dataclass
class CMsgGameDataHeroListHeroInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    name_loc: str = betterproto.string_field(3)
    name_english_loc: str = betterproto.string_field(4)
    primary_attr: int = betterproto.uint32_field(5)
    complexity: int = betterproto.uint32_field(6)


@dataclass
class CMsgGameDataItemAbilityList(betterproto.Message):
    itemabilities: list[CMsgGameDataItemAbilityListItemAbilityInfo] = betterproto.message_field(1)


@dataclass
class CMsgGameDataItemAbilityListItemAbilityInfo(betterproto.Message):
    id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    name_loc: str = betterproto.string_field(3)
    name_english_loc: str = betterproto.string_field(4)
    neutral_item_tier: int = betterproto.int32_field(5)


@dataclass
class CMsgLobbyAbilityDraftData(betterproto.Message):
    shuffle_draft_order: bool = betterproto.bool_field(1)


@dataclass
class CSOEconItemDropRateBonus(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    expiration_date: float = betterproto.fixed32_field(2)
    bonus: float = betterproto.float_field(3)
    bonus_count: int = betterproto.uint32_field(4)
    item_id: int = betterproto.uint64_field(5)
    def_index: int = betterproto.uint32_field(6)
    seconds_left: int = betterproto.uint32_field(7)
    booster_type: int = betterproto.uint32_field(8)


@dataclass
class CSOEconItemTournamentPassport(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    league_id: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint64_field(3)
    original_purchaser_id: int = betterproto.uint32_field(4)
    passports_bought: int = betterproto.uint32_field(5)
    version: int = betterproto.uint32_field(6)
    def_index: int = betterproto.uint32_field(7)
    reward_flags: int = betterproto.uint32_field(8)


@dataclass
class CMsgStickerbookSticker(betterproto.Message):
    item_def_id: int = betterproto.uint32_field(1)
    sticker_num: int = betterproto.uint32_field(2)
    quality: int = betterproto.uint32_field(3)
    position_x: float = betterproto.float_field(4)
    position_y: float = betterproto.float_field(5)
    position_z: float = betterproto.float_field(8)
    rotation: float = betterproto.float_field(6)
    scale: float = betterproto.float_field(7)
    source_item_id: int = betterproto.uint64_field(9)
    depth_bias: int = betterproto.uint32_field(10)


@dataclass
class CMsgStickerbookPage(betterproto.Message):
    page_num: int = betterproto.uint32_field(1)
    event_id: EEvent = betterproto.enum_field(2)
    team_id: int = betterproto.uint32_field(3)
    stickers: list[CMsgStickerbookSticker] = betterproto.message_field(4)
    page_type: EStickerbookPageType = betterproto.enum_field(5)


@dataclass
class CMsgStickerbookTeamPageOrderSequence(betterproto.Message):
    page_numbers: list[int] = betterproto.uint32_field(1)


@dataclass
class CMsgStickerbook(betterproto.Message):
    pages: list[CMsgStickerbookPage] = betterproto.message_field(1)
    team_page_order_sequence: CMsgStickerbookTeamPageOrderSequence = betterproto.message_field(2)
    favorite_page_num: int = betterproto.uint32_field(3)


@dataclass
class CMsgStickerHero(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    item_def_id: int = betterproto.uint32_field(2)
    quality: int = betterproto.uint32_field(3)
    source_item_id: int = betterproto.uint64_field(4)


@dataclass
class CMsgStickerHeroes(betterproto.Message):
    heroes: list[CMsgStickerHero] = betterproto.message_field(1)


@dataclass
class CMsgHeroRoleStats(betterproto.Message):
    lane_selection_flags: int = betterproto.uint32_field(1)
    match_count: int = betterproto.uint32_field(2)
    win_count: int = betterproto.uint32_field(3)


@dataclass
class CMsgHeroRoleHeroStats(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    role_stats: list[CMsgHeroRoleStats] = betterproto.message_field(2)


@dataclass
class CMsgHeroRoleRankStats(betterproto.Message):
    rank_tier: int = betterproto.uint32_field(1)
    hero_stats: list[CMsgHeroRoleHeroStats] = betterproto.message_field(2)


@dataclass
class CMsgHeroRoleAllRanksStats(betterproto.Message):
    start_timestamp: int = betterproto.uint32_field(1)
    end_timestamp: int = betterproto.uint32_field(2)
    rank_stats: list[CMsgHeroRoleRankStats] = betterproto.message_field(3)


@dataclass
class CMsgMapStatsSnapshot(betterproto.Message):
    timestamp: int = betterproto.uint32_field(1)
    lotuses_gained: int = betterproto.uint64_field(2)
    wisdom_runes_gained: int = betterproto.uint64_field(3)
    roshan_kills_day: int = betterproto.uint64_field(4)
    roshan_kills_night: int = betterproto.uint64_field(5)
    portals_used: int = betterproto.uint64_field(6)
    watchers_taken: int = betterproto.uint64_field(7)
    tormentor_kills: int = betterproto.uint64_field(8)
    outposts_captured: int = betterproto.uint64_field(9)
    shield_runes_gained: int = betterproto.uint64_field(10)


@dataclass
class CMsgGlobalMapStats(betterproto.Message):
    current: CMsgMapStatsSnapshot = betterproto.message_field(1)
    window_start: CMsgMapStatsSnapshot = betterproto.message_field(2)
    window_end: CMsgMapStatsSnapshot = betterproto.message_field(3)


@dataclass
class CMsgTrackedStat(betterproto.Message):
    tracked_stat_id: int = betterproto.uint32_field(1)
    tracked_stat_value: int = betterproto.int32_field(2)
